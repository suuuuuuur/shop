from pygame import *
from random import randint 

win_width = 700
win_height = 500
window = display.set_mode((win_width, win_height))
display.set_caption('Shop')
background = transform.scale(image.load('ffon.jpg'), (win_width, win_height))

font.init()
font1 = font.Font(None,80)
win = font1.render('YOU WIN!!!',True , (255,255,255))
lose = font1.render('YOU LOX!!!',True, (180,0,0))
font2 = font.Font(None,36)


mixer.init()
mixer.music.load('ffoonn.ogg')
mixer.music.play()
tomato_sound = mixer.Sound('tomat_upal.ogg')
ars_sound = mixer.Sound('upalo.ogg')

img_back = 'ffon.jpg'
img_hero = 'telega.png'
img_bad_tomato = 'tomat_fu.png'
img_musor = 'mussor.png'
img_tomato = "ii.png"
img_bad_a = 'bad_a.png'
img_a = 'a.png'


score = 0
lost = 0
max_lost = 20
goal = 20
life = 3

class GameSprite(sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        sprite.Sprite.__init__(self)
        self.image = transform.scale(image.load(player_image), (size_x, size_y))
        self.speed = player_speed
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y

    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))

class Player(GameSprite):
    def update(self):
        keys = key.get_pressed()
        if keys[K_LEFT] and self.rect.x > 5:
            self.rect.x -= self.speed
        elif keys[K_RIGHT] and self.rect.x < win_width - 80:
            self.rect.x += self.speed

class Enemy_1(GameSprite):
    def update(self):
        self.rect.y +=self.speed 
        global lost 
        if self.rect.y > win_height:
            self.rect.x = randint(80, win_width-80)
            self.rect.y = 0
            lost +=1

class Enemy_2(GameSprite):
    def update(self):
        self.rect.y +=self.speed


telega = Player(img_hero, 5, win_height - 100, 80, 100, 10)

tomatos = sprite.Group()
for i in range(1,3):
    tomato = Enemy_1(img_tomato, randint(80, win_width-80), -40, 40, 30, randint(1,3))
    tomatos.add(tomato)
'''
musors = sprite.Group()
for d in range(1,5):
    musor = Enemy_2(img_musor, randint(80, win_width-80), -40, 80, 80, randint(1,5))
    musors.add(musor)'''
bad_tomatos = sprite.Group()
for d in range(1,3):
    bad_tomato = Enemy_2(img_bad_tomato, randint(80, win_width-80), -40, 50, 50, randint(1,5))
    bad_tomatos.add(bad_tomato)


ars = sprite.Group()
for i in range(1,3):
    ar = Enemy_1(img_a, randint(80, win_width-80), -40, 60, 50, randint(1,3))
    ars.add(ar)

bad_ars = sprite.Group()
for d in range(1,3):
    bad_ar = Enemy_2(img_bad_a, randint(80, win_width-80), -40, 50, 50, randint(1,5))
    bad_ars.add(bad_ar)



finish = False
run = True

while run:
    for e in event.get():
        if e.type == QUIT:
            run = False
      
    if finish!= True:
        window.blit(background, (0, 0))
        telega.update()
        tomatos.update()
        bad_tomatos.update() 
        ars.update()
        bad_ars.update() 


        telega.reset()
        tomatos.draw(window)
        bad_tomatos.draw(window)
        ars.draw(window)
        bad_ars.draw(window)


        
        text = font2.render('Счёт:'+str(score), 1, (0,0,255))
        window.blit(text, (10,20))

        text_lose = font2.render('Пропущено:'+str(lost), 1, (0,0,255))
        window.blit(text_lose, (10,50))

        if life == 3:
            life_colour = (0,150,0)
        if life == 2:
            life_colour = (150,150,0)
        if life == 1:
            life_colour = (150,0,0)

        text_life = font1.render(str(life),1, life_colour)
        window.blit(text_life, (650,10))





        if sprite.spritecollide(telega, tomatos, False):
            sprite.spritecollide(telega,tomatos, True)
            score += 1


            tomato = Enemy_1(img_tomato, randint(80, win_width - 80), -40, 40, 30, randint(1,3))
            tomatos.add(tomato)
            bad_tomato = Enemy_2(img_bad_tomato, randint(80, win_width-80), -40, 50, 50, randint(1,5))
            bad_tomatos.add(bad_tomato)
            
        if sprite.spritecollide(telega, bad_tomatos, False):
            sprite.spritecollide(telega,bad_tomatos, True)
            life -= 1
            bad_tomato = Enemy_2(img_bad_tomato, randint(80, win_width-80), -40, 50, 50, randint(1,5))
            bad_tomatos.add(bad_tomato)
            tomato_sound.play()

        if sprite.spritecollide(telega, ars, False):
            sprite.spritecollide(telega,ars, True)
            score += 1
            ar = Enemy_1(img_a, randint(80, win_width-80), -40, 60, 50, randint(1,3))
            ars.add(ar)            
            bad_ar = Enemy_2(img_bad_a, randint(80, win_width-80), -40, 50, 50, randint(1,5))
            bad_ars.add(bad_ar)

        if sprite.spritecollide(telega, bad_ars, False):
            sprite.spritecollide(telega,bad_ars, True)
            life -= 1
            bad_ar = Enemy_2(img_bad_a, randint(80, win_width-80), -40, 50, 50, randint(1,5))
            bad_ars.add(bad_ar)
            ars_sound.play()



        if life == 0 or lost >= max_lost:
            finish = True
            window.blit(lose, (200,200))

        if score >= goal:
            finish = True
            window.blit(win, (200, 200))

        display.update()
    else: 
        finish = False
        score = 0
        lost = 0
        life = 3

        for f in tomatos:
            f.kill()

        for m in bad_tomatos:
            m.kill()

        for q in bad_ars:
            q.kill()

        for l in ars:
            l.kill()



        for o in range(1,4):
            tomato = Enemy_1(img_tomato, randint(80, win_width-80), -40, 40, 30, randint(1,5))
            tomatos.add(tomato)

        for p in range(1,4):
            bad_tomato = Enemy_2(img_bad_tomato, randint(80, win_width-80), -40, 50, 50, randint(1,5))
            bad_tomatos.add(bad_tomato)

        
        for i in range(1,3):
            ar = Enemy_1(img_a, randint(80, win_width-80), -40, 60, 50, randint(1,3))
            ars.add(ar)


        for d in range(1,3):
            bad_ar = Enemy_2(img_bad_a, randint(80, win_width-80), -40, 50, 50, randint(1,5))
            bad_ars.add(bad_ar)
        

    time.delay(50)

        
